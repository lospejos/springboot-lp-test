group = 'com.lonewolf.spb'
version = '1.0-SNAPSHOT'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'net.wasdev.wlp.gradle.plugins:liberty-gradle-plugin:2.0.1'
        classpath files('gradle/wlp-anttasks.jar')
    }
}

apply plugin: 'war'
apply plugin: 'liberty'

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = 'UTF-8'

ext {
    appName = 'springbootlptest'
    testServerHttpPort = 9080
    testServerHttpsPort = 9443
    serverDirectory = "${buildDir}/wlp/usr/servers/defaultServer"
    warContext = "${appName}"
    packageFile = "${project.buildDir}/${rootProject.name}-${version}.zip"
    packagingType = 'usr'
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile ('junit:junit:4.12') 
    testCompile ('org.apache.cxf:cxf-rt-rs-client:3.1.11') 
    testCompile ('org.glassfish:javax.json:1.0.4') 
    providedCompile ('javax.ws.rs:javax.ws.rs-api:2.0.1') 
    providedCompile ('com.ibm.websphere.appserver.api:com.ibm.websphere.appserver.api.jaxrs20:1.0.18') 
    providedCompile ('javax.json:javax.json-api:1.0') 
    providedCompile ('com.ibm.websphere.appserver.api:com.ibm.websphere.appserver.api.json:1.0.18') 
    providedCompile ('javax.servlet:javax.servlet-api:3.1.0') 
    providedCompile ('com.ibm.websphere.appserver.api:com.ibm.websphere.appserver.api.servlet:1.1.18') 
    compile ('org.springframework.boot:spring-boot-starter-web:1.3.0.RELEASE') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    } 
    providedCompile ('com.ibm.websphere.appserver.api:com.ibm.websphere.appserver.api.persistence:1.0.18') 
    providedCompile ('org.eclipse.persistence:javax.persistence:2.1.0') 
    providedCompile ('io.swagger:swagger-annotations:1.5.3') 
    providedCompile ('org.eclipse.microprofile:microprofile:1.2') 
    libertyRuntime ('com.ibm.websphere.appserver.runtime:wlp-webProfile7:17.0.0.3')
}

test {
    reports.html.destination = file("$buildDir/reports/unit")
    reports.junitXml.destination = file("$buildDir/test-results/unit")
    exclude '**/it/**'
}

task integrationTest(type: Test) {
    group 'Verification'
    description 'Runs the integration tests.'
    reports.html.destination = file("$buildDir/reports/it")
    reports.junitXml.destination = file("$buildDir/test-results/it")
    include '**/it/**'
    exclude '**/unit/**'

    systemProperties = ['liberty.test.port': testServerHttpPort, 'war.context': warContext]
}

task printMessageAboutRunningServer {
    doLast {
        println "The server is now running at http://localhost:${testServerHttpPort}/${warContext}"
        println "To stop the server run 'gradle libertyStop'"
    }
}

liberty {
    server{
        apps = [war]
        configFile = file("src/main/liberty/config/server.xml")
        jvmOptionsFile = file("src/main/liberty/config/jvm.options")
        serverEnv = file("src/main/liberty/config/server.env")
        bootstrapProperties = ['default.http.port': "${testServerHttpPort}" , 
                               'default.https.port': "${testServerHttpsPort}"]
        features {
            acceptLicense = true
        }
        packageLiberty {
            archive = packageFile
            include = packagingType
        }
     }
}

task libertyStartTestServer(type: net.wasdev.wlp.gradle.plugins.tasks.StartTask){
    description 'Starts the WebSphere Liberty Profile server for testing.'
    logging.level = LogLevel.INFO
}


check.dependsOn 'integrationTest'
libertyCreate.finalizedBy 'installFeature'
integrationTest.dependsOn 'libertyStart', 'testClasses'
integrationTest.finalizedBy 'libertyStop'
assemble.finalizedBy 'libertyPackage'
libertyStart.finalizedBy 'printMessageAboutRunningServer'
